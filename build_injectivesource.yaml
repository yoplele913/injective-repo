---
- name: Install Injective Node from Source
  hosts: injective_nodes
  become: true
  gather_facts: yes
  vars:
    injective_repo: "https://github.com/InjectiveFoundation/injective-core.git" 
    injective_version: "v1.14.1"
    seeds: "ade4d8bc8cbe014af6ebdf3cb7b1e9ad36f412c0@seeds.polkachu.com:14356"
    go_version: "1.24.1"
    go_tarball: "go{{ go_version }}.linux-amd64.tar.gz"
    go_url: "https://go.dev/dl/{{ go_tarball }}"
    install_path: "/home/ubuntu/injective-core"
    dest_dir: "/usr/bin"
    moniker: "injective"
    injective_binary: "injectived"
    wasm_lib_url: "https://github.com/CosmWasm/wasmvm/releases/download/v2.1.5/libwasmvm.x86_64.so"
    wasm_lib_path: "/usr/lib/libwasmvm.x86_64.so"

  tasks:
    - name: Install required packages
      apt:
        name:
          - unzip
          - build-essential
          - make
          - lz4
          - curl
          - wget
          - gcc
          - g++
          - jq
        state: present
        update_cache: yes
      become: true
    
    - name: Remove existing Go installation
      file:
        path: "/usr/local/go" 
        state: absent

    - name: Download Go {{ go_version }}
      get_url:
        url: "{{ go_url }}"
        dest: "/tmp/{{ go_tarball }}"

    - name: Extract Go archive
      shell: "tar -C /usr/local -xzf /tmp/{{ go_tarball }}"
      args:
        executable: /bin/bash

    - name: Configure Go environment in /etc/profile.d/golang.sh
      copy:
        dest: /etc/profile.d/golang.sh
        content: |
          export GOROOT=/usr/local/go
          export GOPATH=/home/ubuntu/go
          export GOBIN=$GOPATH/bin
          export PATH=$PATH:/usr/local/go/bin:$GOBIN
          export GOPROXY=https://proxy.golang.org,direct
        owner: root
        group: root
        mode: '0644'
      become: true
    
    - name: Source Go environment and verify go version
      shell: |
        source /etc/profile.d/golang.sh
        go version
      args:
        executable: /bin/bash
          
    - name: Set GOPROXY to avoid git prompt issues
      lineinfile:
        path: /etc/profile.d/golang.sh
        line: 'export GOPROXY=https://proxy.golang.org,direct'
        create: yes
      become: true

    - name: Clean Go module cache
      shell: "/usr/local/go/bin/go clean -modcache"
      args:
        executable: /bin/bash
      become: true
      become_user: ubuntu
        
    - name: Clone Injective Core repository
      git:
        repo: "{{ injective_repo }}"
        dest: "{{ install_path }}"
        version: "{{ injective_version }}"
        force: yes

    - name: Add Injective Core directory as a safe Git directory
      shell: "git config --global --add safe.directory /home/ubuntu/injective-core"
      args:
        executable: /bin/bash

    - name: Change ownership of Injective Core directory
      shell: "sudo chown -R ubuntu:ubuntu /home/ubuntu/injective-core"
      args:
        executable: /bin/bash
      become: true      
    
    - name: Checkout version, tidy modules, and build Injective Node
      shell: |
        source /etc/profile.d/golang.sh
        cd {{ install_path }}
        git checkout {{ injective_version }}
        go clean -modcache
        go mod tidy
        make install
      args:
        executable: /bin/bash
      become: true
      become_user: ubuntu

    - name: Move Injective binary to /usr/bin
      copy:
        src: "/home/ubuntu/go/bin/{{ injective_binary }}"
        dest: "{{ dest_dir }}/{{ injective_binary }}"
        remote_src: yes
        mode: '0755'
      become: false

    - name: Verify Injective installation
      command: "{{ dest_dir }}/{{ injective_binary }} version"
      register: injective_version_check
      changed_when: false

    - name: Display installed Injective version
      debug:
        msg: "Installed Injective version: {{ injective_version_check.stdout }}"

    - name: Remove old libwasmvm if exists
      file:
        path: "{{ wasm_lib_path }}"
        state: absent
    
    - name: Download libwasmvm shared library
      get_url:
        url: "{{ wasm_lib_url }}"
        dest: "{{ wasm_lib_path }}"
        mode: '0755'

    - name: Run ldconfig to update shared libraries
      command: ldconfig

    - name: Verify libwasmvm installation
      stat:
        path: "{{ wasm_lib_path }}"
      register: wasm_lib_check

    # Injective 노드 초기화
    - name: Initialize Injective node
      shell: injectived init "{{ moniker }}" --chain-id injective-1
      args:
        chdir: /home/ubuntu/
      become: yes
      become_user: ubuntu

    # Mainnet 설정 파일 복사
    - name: Clone Mainnet config repository
      git:
        repo: "https://github.com/InjectiveLabs/mainnet-config"
        dest: /home/ubuntu/mainnet-config

    - name: Copy genesis.json
      copy:
        src: /home/ubuntu/mainnet-config/10001/genesis.json
        dest: /home/ubuntu/.injectived/config/genesis.json
        remote_src: yes

    - name: Copy app.toml
      copy:
        src: /home/ubuntu/mainnet-config/10001/app.toml
        dest: /home/ubuntu/.injectived/config/app.toml
        remote_src: yes

    - name: Configure seeds in config.toml
      lineinfile:
        path: /home/ubuntu/.injectived/config/config.toml
        regexp: '^seeds ='
        line: 'seeds = "{{ seeds }}"'

    - name: Configure systemd service for Injective
      copy:
        dest: /etc/systemd/system/injectived.service
        content: |
          [Unit]
          Description=Injective Node
          After=network-online.target

          [Service]
          WorkingDirectory=/usr/bin
          User=ubuntu 
          ExecStart=/usr/bin/injectived start --log-level=info
          Type=simple
          Restart=always
          RestartSec=5
          
          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      command: sudo systemctl daemon-reload
      async: 30

    - name: Restart Injectived service
      command: sudo systemctl restart injectived
      async: 30

    - name: Enable Injectived service to start on boot
      command: sudo systemctl enable injectived
      async: 30
