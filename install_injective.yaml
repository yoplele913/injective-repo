---
- name: Deploy Injective nodes
  hosts: injective_nodes
  become: yes
  become_method: sudo
  gather_facts: no
  vars:
    injective_version: "v1.14.0-1739303348"
    repo_url: "https://github.com/InjectiveLabs/injective-chain-releases.git"
    install_dir: "/home/ubuntu/injective"
    chain_id: "injective-1"
    inventory_hostname: injective
    go_version: "1.21.5"
    go_url: "https://go.dev/dl/go{{ go_version }}.linux-amd64.tar.gz"

  tasks:
    - name: Install required dependencies
      become: yes  # root 권한 실행
      apt:
        update_cache: yes
        name:
          - curl
          - wget
          - unzip
          - lz4
          - zstd
          - tar
        state: present
    # 1. golang installation 
    - name: Download Go binary
      get_url:
        url: "{{ go_url }}"
        dest: "/tmp/go{{ go_version }}.tar.gz"

    #- name: Remove old Go installation
    #  file:
    #    path: "/usr/local/go"
    #    state: absent

    - name: Extract Go archive
      unarchive:
        src: "/tmp/go{{ go_version }}.tar.gz"
        dest: "/usr/local"
        remote_src: yes

    - name: Set Go environment variables
      lineinfile:
        path: /etc/profile.d/go.sh
        line: "{{ item }}"
        create: yes
        mode: '0755'
      with_items:
        - 'export PATH=$PATH:/usr/local/go/bin'
        - 'export GOPATH=$HOME/go'
        - 'export PATH=$PATH:$GOPATH/bin'

    - name: Apply environment changes
      shell: source /etc/profile.d/go.sh
      args:
        executable: /bin/bash
    
    # 2. Injective 바이너리 다운로드 및 압축 해제
    - name: Clone Injective repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ install_dir }}"
        version: "{{ injective_version }}"
        force: yes

    - name: Build Injective binary
      shell: |
        cd {{ install_dir }}
        make install
      args:
        executable: /bin/bash

    - name: Verify Injective installation
      command: injectived version
      register: injective_version_output
      changed_when: false

    - debug:
        msg: "Installed Injective version: {{ injective_version_output.stdout }}"

    - name: Extract Injective binary
      unarchive:
        src: /home/ubuntu/linux-amd64.zip
        dest: /home/ubuntu/
        remote_src: yes
        extra_opts: ["-o"]

    - name: Move injectived binary to /usr/bin
      become: yes
      become_user: root
      command: sudo mv /home/ubuntu/injectived /usr/bin/

    - name: Move peggo to /usr/bin
      become: yes
      become_user: root
      command: sudo mv /home/ubuntu/peggo /usr/bin/

    - name: Set execute permissions for injectived binary
      file:
        path: /usr/bin/injectived
        mode: '0755'

    # 4. 추가 라이브러리 설치
    - name: Install libwasmvm
      become: yes
      become_user: root
      command: sudo mv /home/ubuntu/libwasmvm.x86_64.so /usr/lib/

    # 5. Injective 노드 초기화
    - name: Initialize Injective node
      shell: injectived init "{{ inventory_hostname }}" --chain-id "{{ chain_id }}"
      args:
        chdir: /home/ubuntu/
      become: yes
      become_user: ubuntu

    # 6. Mainnet 설정 파일 복사
    - name: Clone Mainnet config repository
      git:
        repo: "https://github.com/InjectiveLabs/mainnet-config"
        dest: /home/ubuntu/mainnet-config

    - name: Copy genesis.json
      copy:
        src: /home/ubuntu/mainnet-config/10001/genesis.json
        dest: /home/ubuntu/.injectived/config/genesis.json

    - name: Copy app.toml
      copy:
        src: /home/ubuntu/mainnet-config/10001/app.toml
        dest: /home/ubuntu/.injectived/config/app.toml

    - name: Configure seeds in config.toml
      lineinfile:
        path: /home/ubuntu/.injectived/config/config.toml
        regexp: '^seeds ='
        line: 'seeds = "{{ seeds }}"'

    # 7. Systemd 서비스 파일 구성
    - name: Configure systemd service for Injective (run as root)
      copy:
        dest: /etc/systemd/system/injectived.service
        content: |
          [Unit]
          Description=injectived

          [Service]
          WorkingDirectory=/usr/bin
          User=ubuntu
          ExecStart=/usr/bin/injectived start --log-level=error
          Type=simple
          Restart=always
          RestartSec=5
          
          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      command: sudo systemctl daemon-reload
      async: 30

    - name: Restart Injectived service
      command: sudo systemctl restart injectived
      async: 30

    - name: Enable Injectived service to start on boot
      command: sudo systemctl enable injectived
      async: 30

    - name: Stop Injectived service (if needed)
      command: sudo systemctl stop injectived
      ignore_errors: yes
      async: 30

    - name: Start Injectived service
      command: sudo systemctl start injectived
      async: 30
